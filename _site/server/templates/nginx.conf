# Rushy Panchal
# nginx.conf
# NginX Configuration

{% if config.web.https %}
server {
	# redirect to SSL (HTTPS) when only using HTTP
	listen 80;
	server_name {{ config.web.url }};
	return 301 https://$server_name$request_uri;
	}
{% endif %}

server {
	{% if config.web.cloudflare %}
	# CloudFlare forwarded IP addresses
	set_real_ip_from 199.27.128.0/21;
	set_real_ip_from 173.245.48.0/20;
	set_real_ip_from 103.21.244.0/22;
	set_real_ip_from 103.22.200.0/22;
	set_real_ip_from 103.31.4.0/22;
	set_real_ip_from 141.101.64.0/18;
	set_real_ip_from 108.162.192.0/18;
	set_real_ip_from 190.93.240.0/20;
	set_real_ip_from 188.114.96.0/20; 
	set_real_ip_from 197.234.240.0/22;
	set_real_ip_from 198.41.128.0/17;
	set_real_ip_from 162.158.0.0/15;
	set_real_ip_from 104.16.0.0/12;
	set_real_ip_from 172.64.0.0/13;
	set_real_ip_from 2400:cb00::/32;
	set_real_ip_from 2606:4700::/32;
	set_real_ip_from 2803:f800::/32;
	set_real_ip_from 2405:b500::/32;
	set_real_ip_from 2405:8100::/32;
	real_ip_header CF-Connecting-IP;
	{% endif %}

	{% if config.web.https %}
	listen 443 ssl;
	{% else %}
	listen 80;
	{% endif %}
	root /var/www/{{ config.web.url }};

	{% if config.web.https %}
	# SSL configuration
	ssl_certificate /etc/nginx/ssl/{{ config.web.url  }}.bundle.crt;
	ssl_certificate_key /etc/nginx/ssl/{{ config.web.url  }}.private.key;
	ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
	ssl_prefer_server_ciphers on;
	ssl_ciphers "EECDH+ECDSA+AESGCM EECDH+aRSA+AESGCM EECDH+ECDSA+SHA384 EECDH+ECDSA+SHA256 EECDH+aRSA+SHA384 EECDH+aRSA+SHA256 EECDH+aRSA+RC4 EECDH EDH+aRSA RC4 !aNULL !eNULL !LOW !3DES !MD5 !EXP !PSK !SRP !DSS +RC4 RC4";
	{% endif %}

	# redirect www.{{ config.web.url }} to {{ config.web.url }}
	server_name {{ config.web.url }} www.{{ config.web.url }};
	autoindex off;

	{% if config.web.gzip %}
	# Gzip configuration to compress responses
	gzip on;
	gzip_comp_level 5;
	gzip_vary on;
	gzip_min_length 1000;
	gzip_buffers 16 8k;
	gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript; # text/html is already added by default
	{% endif %}

	{% if config.web.static_error_pages %}
	# Static error pages, which are served directly by NginX
	error_page 403 /{{ config.app.static_directory }}/errors/403.html;
	error_page 404 /{{ config.app.static_directory }}/errors/404.html;
	error_page 500 /{{ config.app.static_directory }}/errors/500.html;
	error_page 502 /{{ config.app.static_directory }}/errors/502.html;
	error_page 503 /{{ config.app.static_directory }}/errors/503.html;
	error_page 504 /{{ config.app.static_directory }}/errors/504.html;
	{% endif %}

	location / {
		# Forward to the application server via uWSGI
		include uwsgi_params;

		uwsgi_param HTTP_X_Real_IP $remote_addr;
		uwsgi_param HTTP_X_Forwarded_For $proxy_add_x_forwarded_for;
		uwsgi_param HTTP_X_Forwarded_Proto $scheme;
		uwsgi_param HTTP_Host $http_host;
		uwsgi_param HTTP_X_NginX_Proxy true;

		# pass the data via a Unix socket
		uwsgi_pass unix://var/www/{{ config.web.url }}/{{ config.app.directory }}/app.sock;
		}

	location ^~ /static {
		# Static files that are served directly by NginX
		alias /var/www/{{ config.web.url }}/{{ config.app.static_directory }};
		access_log off;

		etag on;
		expires max;
		add_header Cache-Control "public, must-revalidate, proxy-revalidate";
		add_header Access-Control-Allow-Origin *;
		}
	}	
